// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResultRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultRequest) Reset()         { *m = ResultRequest{} }
func (m *ResultRequest) String() string { return proto.CompactTextString(m) }
func (*ResultRequest) ProtoMessage()    {}
func (*ResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *ResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultRequest.Unmarshal(m, b)
}
func (m *ResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultRequest.Marshal(b, m, deterministic)
}
func (m *ResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultRequest.Merge(m, src)
}
func (m *ResultRequest) XXX_Size() int {
	return xxx_messageInfo_ResultRequest.Size(m)
}
func (m *ResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResultRequest proto.InternalMessageInfo

func (m *ResultRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *ResultRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type ResultResponse struct {
	SumResult            int32    `protobuf:"varint,1,opt,name=sum_result,json=sumResult,proto3" json:"sum_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultResponse) Reset()         { *m = ResultResponse{} }
func (m *ResultResponse) String() string { return proto.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()    {}
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *ResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultResponse.Unmarshal(m, b)
}
func (m *ResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultResponse.Marshal(b, m, deterministic)
}
func (m *ResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultResponse.Merge(m, src)
}
func (m *ResultResponse) XXX_Size() int {
	return xxx_messageInfo_ResultResponse.Size(m)
}
func (m *ResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResultResponse proto.InternalMessageInfo

func (m *ResultResponse) GetSumResult() int32 {
	if m != nil {
		return m.SumResult
	}
	return 0
}

type PrimeNumberDecompositionRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionRequest) Reset()         { *m = PrimeNumberDecompositionRequest{} }
func (m *PrimeNumberDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionRequest) ProtoMessage()    {}
func (*PrimeNumberDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *PrimeNumberDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *PrimeNumberDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionRequest.Merge(m, src)
}
func (m *PrimeNumberDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Size(m)
}
func (m *PrimeNumberDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionRequest proto.InternalMessageInfo

func (m *PrimeNumberDecompositionRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberDecompositionResponse struct {
	PrimeFactor          int64    `protobuf:"varint,1,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionResponse) Reset()         { *m = PrimeNumberDecompositionResponse{} }
func (m *PrimeNumberDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionResponse) ProtoMessage()    {}
func (*PrimeNumberDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *PrimeNumberDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *PrimeNumberDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionResponse.Merge(m, src)
}
func (m *PrimeNumberDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Size(m)
}
func (m *PrimeNumberDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionResponse proto.InternalMessageInfo

func (m *PrimeNumberDecompositionResponse) GetPrimeFactor() int64 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

type ComputerAverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputerAverageRequest) Reset()         { *m = ComputerAverageRequest{} }
func (m *ComputerAverageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputerAverageRequest) ProtoMessage()    {}
func (*ComputerAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *ComputerAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputerAverageRequest.Unmarshal(m, b)
}
func (m *ComputerAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputerAverageRequest.Marshal(b, m, deterministic)
}
func (m *ComputerAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputerAverageRequest.Merge(m, src)
}
func (m *ComputerAverageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputerAverageRequest.Size(m)
}
func (m *ComputerAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputerAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputerAverageRequest proto.InternalMessageInfo

func (m *ComputerAverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputerAverageResponse struct {
	Average              float64  `protobuf:"fixed64,1,opt,name=average,proto3" json:"average,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputerAverageResponse) Reset()         { *m = ComputerAverageResponse{} }
func (m *ComputerAverageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputerAverageResponse) ProtoMessage()    {}
func (*ComputerAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *ComputerAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputerAverageResponse.Unmarshal(m, b)
}
func (m *ComputerAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputerAverageResponse.Marshal(b, m, deterministic)
}
func (m *ComputerAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputerAverageResponse.Merge(m, src)
}
func (m *ComputerAverageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputerAverageResponse.Size(m)
}
func (m *ComputerAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputerAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputerAverageResponse proto.InternalMessageInfo

func (m *ComputerAverageResponse) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

type FindMaximumRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaximumRequest) Reset()         { *m = FindMaximumRequest{} }
func (m *FindMaximumRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaximumRequest) ProtoMessage()    {}
func (*FindMaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *FindMaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaximumRequest.Unmarshal(m, b)
}
func (m *FindMaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaximumRequest.Marshal(b, m, deterministic)
}
func (m *FindMaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaximumRequest.Merge(m, src)
}
func (m *FindMaximumRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaximumRequest.Size(m)
}
func (m *FindMaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaximumRequest proto.InternalMessageInfo

func (m *FindMaximumRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type FindMaximumResponse struct {
	Maximum              int32    `protobuf:"varint,1,opt,name=maximum,proto3" json:"maximum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaximumResponse) Reset()         { *m = FindMaximumResponse{} }
func (m *FindMaximumResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaximumResponse) ProtoMessage()    {}
func (*FindMaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *FindMaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaximumResponse.Unmarshal(m, b)
}
func (m *FindMaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaximumResponse.Marshal(b, m, deterministic)
}
func (m *FindMaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaximumResponse.Merge(m, src)
}
func (m *FindMaximumResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaximumResponse.Size(m)
}
func (m *FindMaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaximumResponse proto.InternalMessageInfo

func (m *FindMaximumResponse) GetMaximum() int32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{8}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{9}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*ResultRequest)(nil), "calculator.ResultRequest")
	proto.RegisterType((*ResultResponse)(nil), "calculator.ResultResponse")
	proto.RegisterType((*PrimeNumberDecompositionRequest)(nil), "calculator.PrimeNumberDecompositionRequest")
	proto.RegisterType((*PrimeNumberDecompositionResponse)(nil), "calculator.PrimeNumberDecompositionResponse")
	proto.RegisterType((*ComputerAverageRequest)(nil), "calculator.ComputerAverageRequest")
	proto.RegisterType((*ComputerAverageResponse)(nil), "calculator.ComputerAverageResponse")
	proto.RegisterType((*FindMaximumRequest)(nil), "calculator.FindMaximumRequest")
	proto.RegisterType((*FindMaximumResponse)(nil), "calculator.FindMaximumResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5b, 0x6b, 0x13, 0x41,
	0x14, 0x76, 0x2d, 0x8d, 0x78, 0x76, 0x5b, 0xf1, 0x08, 0x35, 0x2e, 0xb4, 0x69, 0xa7, 0x2f, 0x81,
	0x96, 0x26, 0x58, 0x7c, 0xf0, 0xb1, 0x5e, 0xf2, 0x16, 0x91, 0x8d, 0x20, 0xf8, 0xe0, 0xb2, 0xd9,
	0x4c, 0x64, 0x21, 0xb3, 0xb3, 0x99, 0x4b, 0xd0, 0xbf, 0xe9, 0x2f, 0x92, 0xcc, 0xec, 0xb8, 0x13,
	0x93, 0x4d, 0x7c, 0xcb, 0xf9, 0xce, 0x77, 0x99, 0x70, 0x3e, 0x16, 0xfa, 0x79, 0xb6, 0xc8, 0xf5,
	0x22, 0x53, 0x5c, 0x0c, 0x9a, 0x9f, 0xd5, 0xd4, 0x1b, 0xee, 0x2a, 0xc1, 0x15, 0x47, 0x68, 0x10,
	0xf2, 0x15, 0x4e, 0x12, 0x2a, 0xf5, 0x42, 0x25, 0x74, 0xa9, 0xa9, 0x54, 0x78, 0x05, 0xd1, 0xbc,
	0x10, 0x52, 0xa5, 0xa5, 0x66, 0x53, 0x2a, 0xba, 0xc1, 0x65, 0xd0, 0x3f, 0x4e, 0x42, 0x83, 0x7d,
	0x32, 0x10, 0x5e, 0xc3, 0x89, 0xa4, 0x39, 0x2f, 0x67, 0x8e, 0xf3, 0xd8, 0x70, 0x22, 0x0b, 0x5a,
	0x12, 0x19, 0xc0, 0xa9, 0x33, 0x96, 0x15, 0x2f, 0x25, 0xc5, 0x73, 0x00, 0xa9, 0x59, 0x2a, 0x0c,
	0x5a, 0xfb, 0x3e, 0x95, 0x9a, 0x59, 0x1a, 0x79, 0x0b, 0xbd, 0xcf, 0xa2, 0x60, 0xd4, 0xea, 0x3f,
	0xd0, 0x9c, 0xb3, 0x8a, 0xcb, 0x42, 0x15, 0xbc, 0x74, 0x6f, 0x3b, 0x83, 0x8e, 0xf7, 0xaa, 0xa3,
	0xa4, 0x9e, 0xc8, 0x47, 0xb8, 0x6c, 0x97, 0xd6, 0xe9, 0x57, 0x10, 0x55, 0x6b, 0x4e, 0x3a, 0xcf,
	0x72, 0xc5, 0x9d, 0x43, 0x68, 0xb0, 0x91, 0x81, 0xc8, 0x10, 0xce, 0xde, 0x73, 0x56, 0x69, 0x45,
	0xc5, 0xc3, 0x8a, 0x8a, 0xec, 0x07, 0xdd, 0x1d, 0x7c, 0xfc, 0x37, 0xf8, 0x1e, 0x5e, 0x6e, 0x29,
	0xea, 0xbc, 0x2e, 0x3c, 0xc9, 0x2c, 0x64, 0x34, 0x41, 0xe2, 0x46, 0x72, 0x0b, 0x38, 0x2a, 0xca,
	0xd9, 0x38, 0xfb, 0x59, 0xb0, 0xf5, 0xbf, 0xdf, 0x1f, 0x31, 0x80, 0x17, 0x1b, 0xec, 0xc6, 0x9e,
	0x59, 0xa8, 0xe6, 0xbb, 0x91, 0xdc, 0xc0, 0xf3, 0xc9, 0x52, 0x67, 0x82, 0x26, 0x9c, 0xab, 0x43,
	0xee, 0x6f, 0x00, 0x7d, 0x72, 0x6d, 0xde, 0x83, 0xd0, 0xee, 0x53, 0xc1, 0xb9, 0xaa, 0xdf, 0x0f,
	0x16, 0x5a, 0x13, 0x5f, 0xff, 0x3e, 0x72, 0xb5, 0x99, 0x50, 0xb1, 0x2a, 0x72, 0x8a, 0x0f, 0xd0,
	0xb1, 0x00, 0xbe, 0xba, 0xf3, 0x0a, 0xb7, 0xd1, 0xad, 0x38, 0xde, 0xb5, 0xb2, 0x99, 0xe4, 0x11,
	0xfe, 0x82, 0x6e, 0xdb, 0x15, 0xf1, 0xc6, 0x57, 0x1e, 0xa8, 0x49, 0x7c, 0xfb, 0x7f, 0x64, 0x17,
	0x3c, 0x0c, 0xf0, 0x3b, 0x3c, 0xfb, 0xe7, 0x8e, 0x48, 0x7c, 0x93, 0xdd, 0xb5, 0x88, 0xaf, 0xf7,
	0x72, 0x9c, 0x7f, 0x3f, 0xc0, 0x2f, 0x10, 0x7a, 0x47, 0xc4, 0x0b, 0x5f, 0xb7, 0xdd, 0x85, 0xb8,
	0xd7, 0xba, 0x6f, 0x3c, 0x87, 0x01, 0x8e, 0x01, 0x9a, 0xe3, 0xe1, 0xb9, 0x2f, 0xda, 0x6a, 0x40,
	0x7c, 0xd1, 0xb6, 0x76, 0x96, 0xef, 0x4e, 0xbf, 0x45, 0xfe, 0x77, 0x63, 0xda, 0x31, 0x5f, 0x8b,
	0xfb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xc6, 0x3e, 0x36, 0x59, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResultServiceClient is the client API for ResultService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResultServiceClient interface {
	Result(ctx context.Context, in *ResultRequest, opts ...grpc.CallOption) (*ResultResponse, error)
	//server streaming, more than 1 response from server at a time
	PrimeNumberDecomposition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (ResultService_PrimeNumberDecompositionClient, error)
	//client streaming, more than 1 request from client at a time
	ComputerAverage(ctx context.Context, opts ...grpc.CallOption) (ResultService_ComputerAverageClient, error)
	//bi-directional streaming
	FindMaximum(ctx context.Context, opts ...grpc.CallOption) (ResultService_FindMaximumClient, error)
	//grpc error handling
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type resultServiceClient struct {
	cc *grpc.ClientConn
}

func NewResultServiceClient(cc *grpc.ClientConn) ResultServiceClient {
	return &resultServiceClient{cc}
}

func (c *resultServiceClient) Result(ctx context.Context, in *ResultRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := c.cc.Invoke(ctx, "/calculator.ResultService/Result", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultServiceClient) PrimeNumberDecomposition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (ResultService_PrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResultService_serviceDesc.Streams[0], "/calculator.ResultService/PrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &resultServicePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResultService_PrimeNumberDecompositionClient interface {
	Recv() (*PrimeNumberDecompositionResponse, error)
	grpc.ClientStream
}

type resultServicePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *resultServicePrimeNumberDecompositionClient) Recv() (*PrimeNumberDecompositionResponse, error) {
	m := new(PrimeNumberDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resultServiceClient) ComputerAverage(ctx context.Context, opts ...grpc.CallOption) (ResultService_ComputerAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResultService_serviceDesc.Streams[1], "/calculator.ResultService/ComputerAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &resultServiceComputerAverageClient{stream}
	return x, nil
}

type ResultService_ComputerAverageClient interface {
	Send(*ComputerAverageRequest) error
	CloseAndRecv() (*ComputerAverageResponse, error)
	grpc.ClientStream
}

type resultServiceComputerAverageClient struct {
	grpc.ClientStream
}

func (x *resultServiceComputerAverageClient) Send(m *ComputerAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *resultServiceComputerAverageClient) CloseAndRecv() (*ComputerAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputerAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resultServiceClient) FindMaximum(ctx context.Context, opts ...grpc.CallOption) (ResultService_FindMaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResultService_serviceDesc.Streams[2], "/calculator.ResultService/FindMaximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &resultServiceFindMaximumClient{stream}
	return x, nil
}

type ResultService_FindMaximumClient interface {
	Send(*FindMaximumRequest) error
	Recv() (*FindMaximumResponse, error)
	grpc.ClientStream
}

type resultServiceFindMaximumClient struct {
	grpc.ClientStream
}

func (x *resultServiceFindMaximumClient) Send(m *FindMaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *resultServiceFindMaximumClient) Recv() (*FindMaximumResponse, error) {
	m := new(FindMaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resultServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.ResultService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResultServiceServer is the server API for ResultService service.
type ResultServiceServer interface {
	Result(context.Context, *ResultRequest) (*ResultResponse, error)
	//server streaming, more than 1 response from server at a time
	PrimeNumberDecomposition(*PrimeNumberDecompositionRequest, ResultService_PrimeNumberDecompositionServer) error
	//client streaming, more than 1 request from client at a time
	ComputerAverage(ResultService_ComputerAverageServer) error
	//bi-directional streaming
	FindMaximum(ResultService_FindMaximumServer) error
	//grpc error handling
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedResultServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResultServiceServer struct {
}

func (*UnimplementedResultServiceServer) Result(ctx context.Context, req *ResultRequest) (*ResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Result not implemented")
}
func (*UnimplementedResultServiceServer) PrimeNumberDecomposition(req *PrimeNumberDecompositionRequest, srv ResultService_PrimeNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumberDecomposition not implemented")
}
func (*UnimplementedResultServiceServer) ComputerAverage(srv ResultService_ComputerAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputerAverage not implemented")
}
func (*UnimplementedResultServiceServer) FindMaximum(srv ResultService_FindMaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method FindMaximum not implemented")
}
func (*UnimplementedResultServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterResultServiceServer(s *grpc.Server, srv ResultServiceServer) {
	s.RegisterService(&_ResultService_serviceDesc, srv)
}

func _ResultService_Result_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultServiceServer).Result(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.ResultService/Result",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultServiceServer).Result(ctx, req.(*ResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultService_PrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResultServiceServer).PrimeNumberDecomposition(m, &resultServicePrimeNumberDecompositionServer{stream})
}

type ResultService_PrimeNumberDecompositionServer interface {
	Send(*PrimeNumberDecompositionResponse) error
	grpc.ServerStream
}

type resultServicePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *resultServicePrimeNumberDecompositionServer) Send(m *PrimeNumberDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ResultService_ComputerAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ResultServiceServer).ComputerAverage(&resultServiceComputerAverageServer{stream})
}

type ResultService_ComputerAverageServer interface {
	SendAndClose(*ComputerAverageResponse) error
	Recv() (*ComputerAverageRequest, error)
	grpc.ServerStream
}

type resultServiceComputerAverageServer struct {
	grpc.ServerStream
}

func (x *resultServiceComputerAverageServer) SendAndClose(m *ComputerAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *resultServiceComputerAverageServer) Recv() (*ComputerAverageRequest, error) {
	m := new(ComputerAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ResultService_FindMaximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ResultServiceServer).FindMaximum(&resultServiceFindMaximumServer{stream})
}

type ResultService_FindMaximumServer interface {
	Send(*FindMaximumResponse) error
	Recv() (*FindMaximumRequest, error)
	grpc.ServerStream
}

type resultServiceFindMaximumServer struct {
	grpc.ServerStream
}

func (x *resultServiceFindMaximumServer) Send(m *FindMaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *resultServiceFindMaximumServer) Recv() (*FindMaximumRequest, error) {
	m := new(FindMaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ResultService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.ResultService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResultService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.ResultService",
	HandlerType: (*ResultServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Result",
			Handler:    _ResultService_Result_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _ResultService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecomposition",
			Handler:       _ResultService_PrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputerAverage",
			Handler:       _ResultService_ComputerAverage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMaximum",
			Handler:       _ResultService_FindMaximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
